# -*- coding: utf-8 -*-
"""Exploração_Dados.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rfDTlA7WQ_k5JWiO4A-YZvlRKVv14G4_
"""

import pandas as pd
import seaborn as srn
import statistics as sts

#Importar Dados
dataset = pd.read_csv("Churn.csv", sep = ";")
#Visualizar
dataset.head()

#Mostrar o tamanho do dataset
dataset.shape

#Primeiro temos que dar nomes as colunas
dataset.columns = ["Id", "Score", "Estado", "Genêro", "Idade", "Patrimonio", "Saldo", "Produtos",
                   "CartãoDeCrédito", "Ativo", "Salário", "Saiu"]

dataset.head()

#Explorar Dados Categóricos
#Estado
agrupado = dataset.groupby(['Estado']).size()
agrupado

agrupado.plot.bar(color = "gray")

agrupado = dataset.groupby(["Genêro"]).size()
agrupado

agrupado.plot.bar(color = "red")

#Explorar Dados Numéricos
#Score
dataset['Score'].describe()

srn.boxplot(dataset['Score']).set_title('Score')

srn.distplot(dataset['Score']).set_title('Score')

#Idade
dataset['Idade'].describe()

srn.boxplot(dataset['Idade']).set_title('Idade')

srn.histplot(dataset['Idade']).set_title('Idade')

#Saldo
dataset['Saldo'].describe()

srn.boxplot(dataset['Saldo']).set_title('Saldo')

srn.histplot(dataset["Saldo"]).set_title('Saldo')

dataset['Salário'].describe()

srn.boxplot(dataset['Salário']).set_title('Salário')

srn.distplot(dataset['Salário']).set_title("Salário")

#Identificando valores nulos(faltantes-NAN)
dataset.isnull().sum()

#Trando Salário
dataset['Salário'].describe()

mediana = sts.median(dataset['Salário'])
mediana

#Substituuir NAN pela mediana
dataset['Salário'].fillna(mediana, inplace=True)

#Verificar se existe NAN
dataset['Salário'].isnull().sum()

#Tratar os genêros
agrupado = dataset.groupby(['Genêro']).size()
agrupado

#Verificar se existe NAN em genêro
dataset['Genêro'].isnull().sum()

#Troca os NAN pela moda (Masculino)
dataset['Genêro'].fillna('Masculino', inplace=True)

#Verificando se existe NAN
dataset['Genêro'].isnull().sum()

#Padronizo o meu domínio
dataset.loc[dataset['Genêro'] == 'M', 'Genêro'] = "Masculino"
dataset.loc[dataset['Genêro'].isin(['F', 'Fem']), 'Genêro'] = "Feminino"

#Verifico os resultados
agrupado = dataset.groupby(['Genêro']).size()
agrupado

agrupado.plot.bar(x = 'Genêro', y = 'Qtd', color = 'gray')

#Tratando as Idades
dataset['Idade'].describe()

#Verifico as Idades fora do meu domínio
dataset.loc[(dataset['Idade'] < 0)|(dataset['Idade'] > 120)]

#Calculo da mediana para substituir os valores fora do domínio
mediana = sts.median(dataset['Idade'])
mediana

#Substituição dos valores pela mediana
dataset.loc[(dataset['Idade'] < 0)|(dataset['Idade'] > 120), 'Idade'] = mediana

#Verifico se foi tratado de forma correta
dataset.loc[(dataset['Idade'] < 0)|(dataset['Idade'] > 120)]

#Verificar se existe duplicação de dados (Id)
dataset[dataset.duplicated(['Id'], keep=False)]

#Excluo a duplicação
dataset.drop_duplicates(subset='Id', keep='first', inplace=True)
#Verificamos o tratamento
dataset[dataset.duplicated(['Id'], keep=False)]

#Verificando os Estados
#Lembrando que só podemos ter estados do Sul
agrupado = dataset.groupby(['Estado']).size()
agrupado

#Preencho os estados de fora do Sul com RS
dataset.loc[dataset['Estado'].isin(['RP', 'SP', 'TD']), 'Estado'] = 'RS'

#Verifico o tratamento
agrupado = dataset.groupby(['Estado']).size()
agrupado

#Trando os outliers dos salários
#Definimos como padrão salários menores do que 2 vezes o desvio padrão
desv = sts.stdev(dataset['Salário'])
desv

#Verifico os outliers
dataset.loc[dataset['Salário'] >= 2*desv]

#Trocamos os outliers pela mediana
mediana = sts.mean(dataset['Salário'])
dataset.loc[dataset['Salário'] >= 2*desv, 'Salário'] = mediana

#Verifico o tratamento
dataset.loc[dataset['Salário'] >= 2*desv]

dataset.head()

dataset.shape